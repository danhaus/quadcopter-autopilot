#!/usr/bin/env python

import rospy
from std_msgs.msg import Int16, Int32

import propelled_cow.PID_control as _PID

class Controller(object):
	"""docstring for ClassName"""
	def __init__(self, arg):
		self.PID_velocity = rospy.get_param('velocity')
		self.velocity_demand = PID_velocity['demand']
		self.controller = _PID.PID(PID_velocity['Kp'], PID_velocity['Ki'], PID_velocity['Kd'], 0, 1000) # THE LAST TWO VALUES NEEDS TO BE ADJUSTED
		self.pub = rospy.Publisher('PWM_velocity', Int16, queue_size=10)
		rospy.init_node('controller', anonymous=True)


	def PWM_demand_velocity(self):
	    rospy.Subscriber('ultrasonic_velocity', Int32, self.PWM_velocity)
	    # spin() simply keeps python from exiting until this node is stopped
	    rospy.spin() # IT MIGHT NOT NEED TO BE HERE

	def PWM_velocity(self, data):
	    velocity_curr = data.data
	    err = self.velocity_demand - velocity_curr
	    PWM_raw = - controller.update_PID(err)
	    pub.publish(PWM_raw)

if __name__ == '__main__':
	controller = Controller()
    controller.PWM_demand_velocity()
