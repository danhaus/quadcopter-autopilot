#!/usr/bin/env python
#libraries
import rospy
from propelled_cow.LSM303 import LSM303
import struct                                    

from geometry_msgs.msg import Vector3

def talker():
    accelerometer = LSM303()
    pub_accel = rospy.Publisher('accelerometer', Vector3, queue_size=10)
    pub_mag = rospy.Publisher('magnetometer', Vector3, queue_size=10)
    rospy.init_node('accelerometer', anonymous=True)
    rate = rospy.Rate(200) # Hz
    while not rospy.is_shutdown():
        accel, mag = accelerometer.read()

        ax, ay ,az = accel
        accelv = Vector3(ax, ay, az)

        mx, my, mz = mag
        magv = Vector3(mx, my, mz)

        rospy.loginfo(accelv)
        rospy.loginfo(magv)

        pub_accel.publish(accelv)
        pub_mag.publish(magv)

        rate.sleep()

if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        accelerometer.cleanupPins()
        pass
