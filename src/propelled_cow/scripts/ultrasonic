#!/usr/bin/env python

import rospy
import os
import sys

from propelled_cow.hcsr04 import HCSR04

from std_msgs.msg import Int16
import RPi.GPIO as GPIO
# from propelled_cow.ultrasonic_hc_sr04 import HCSR04

def ultrasonic_pub():
    TRIGGER = rospy.get_param('ultrasonic/trigger')
    ECHO = rospy.get_param('ultrasonic/echo')
    RATE = rospy.get_param('ultrasonic/rate')
    ultrasonic = HCSR04(TRIGGER, ECHO)
    pub = rospy.Publisher('ultrasonic_raw', Int16, queue_size=10)
    rospy.init_node('ultrasonic', anonymous=True)
    rate = rospy.Rate(RATE) # Hz
    while not rospy.is_shutdown():
        # hello_str = "hello world %s" % rospy.get_time()
        dist = int(ultrasonic.getDistance())
        # rospy.loginfo(msg)
        # saturation
        if dist > 32000:
            dist = 3200

        pub.publish(msg)
        rate.sleep()

if __name__ == '__main__':
    try:
        ultrasonic_pub()
    except rospy.ROSInterruptException:
        ultrasonic.cleanupPins()
        pass
